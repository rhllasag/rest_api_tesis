{
  "_args": [
    [
      {
        "raw": "mongoose-plugin-autoinc@^1.1.9",
        "scope": null,
        "escapedName": "mongoose-plugin-autoinc",
        "name": "mongoose-plugin-autoinc",
        "rawSpec": "^1.1.9",
        "spec": ">=1.1.9 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\homer\\Downloads\\ticTacToue\\nodejs-server"
    ]
  ],
  "_from": "mongoose-plugin-autoinc@>=1.1.9 <2.0.0",
  "_id": "mongoose-plugin-autoinc@1.1.9",
  "_inCache": true,
  "_location": "/mongoose-plugin-autoinc",
  "_nodeVersion": "9.6.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/mongoose-plugin-autoinc_1.1.9_1519650288059_0.5095241642146482"
  },
  "_npmUser": {
    "name": "nodkz",
    "email": "pavel.chertorogov@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mongoose-plugin-autoinc@^1.1.9",
    "scope": null,
    "escapedName": "mongoose-plugin-autoinc",
    "name": "mongoose-plugin-autoinc",
    "rawSpec": "^1.1.9",
    "spec": ">=1.1.9 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mongoose-plugin-autoinc/-/mongoose-plugin-autoinc-1.1.9.tgz",
  "_shasum": "a928ad3af4bb2ea6d35d1141e61394f7af171358",
  "_shrinkwrap": null,
  "_spec": "mongoose-plugin-autoinc@^1.1.9",
  "_where": "C:\\Users\\homer\\Downloads\\ticTacToue\\nodejs-server",
  "bugs": {
    "url": "https://github.com/nodkz/mongoose-plugin-autoinc/issues"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {},
  "description": "This plugin allows you to auto-increment any field on any mongoose schema that you wish (forked mongoose-auto-increment in 2018).",
  "devDependencies": {
    "@types/mongoose": "^5.0.1",
    "async": "^2.6.0",
    "babel-cli": "^6.26.0",
    "babel-eslint": "^8.2.1",
    "babel-jest": "^22.1.0",
    "babel-plugin-transform-flow-strip-types": "^6.22.0",
    "babel-plugin-transform-object-rest-spread": "^6.13.0",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-env": "^1.6.1",
    "bases": "^0.2.1",
    "cz-conventional-changelog": "^2.1.0",
    "eslint": "^4.17.0",
    "eslint-config-airbnb-base": "^12.1.0",
    "eslint-config-prettier": "^2.9.0",
    "eslint-plugin-flowtype": "^2.42.0",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-prettier": "^2.6.0",
    "flow-bin": "^0.64.0",
    "jest": "^22.1.4",
    "mongodb-memory-server": "^1.6.5",
    "mongoose": "^5.0.3",
    "prettier": "^1.10.2",
    "rimraf": "^2.6.2",
    "semantic-release": "^12.4.1",
    "tslint": "^5.9.1",
    "typescript": "^2.7.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-DCkXJjgdQhMJCoRd1xwgKUQCOb/VgC8t3ewZ3+0GNCqCdYD1nxIdnvecO1IWh3ER8KINL98A0b97DgRVwOMxsg==",
    "shasum": "a928ad3af4bb2ea6d35d1141e61394f7af171358",
    "tarball": "https://registry.npmjs.org/mongoose-plugin-autoinc/-/mongoose-plugin-autoinc-1.1.9.tgz",
    "fileCount": 6,
    "unpackedSize": 29404
  },
  "files": [
    "lib"
  ],
  "gitHead": "80b4bb451ae7420e9db975f1a328f1f6461e2cd0",
  "homepage": "https://github.com/nodkz/mongoose-plugin-autoinc",
  "jest": {
    "roots": [
      "<rootDir>/src"
    ]
  },
  "keywords": [
    "mongoose",
    "auto-increment",
    "mongoose-auto-increment",
    "mongoose plugin"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "nodkz",
      "email": "pavel.chertorogov@gmail.com"
    }
  ],
  "name": "mongoose-plugin-autoinc",
  "optionalDependencies": {},
  "peerDependencies": {
    "mongoose": ">=4.0.0 || >=5.0.0"
  },
  "readme": "# mongoose-plugin-autoinc\n[![](https://img.shields.io/npm/v/mongoose-plugin-autoinc.svg)](https://www.npmjs.com/package/mongoose-plugin-autoinc)\n[![codecov coverage](https://img.shields.io/codecov/c/github/nodkz/mongoose-plugin-autoinc.svg)](https://codecov.io/github/nodkz/mongoose-plugin-autoinc)\n[![Travis](https://img.shields.io/travis/nodkz/mongoose-plugin-autoinc.svg?maxAge=2592000)](https://travis-ci.org/nodkz/mongoose-plugin-autoinc)\n[![npm](https://img.shields.io/npm/dt/mongoose-plugin-autoinc.svg)](http://www.npmtrends.com/mongoose-plugin-autoinc)\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\n\n---\n\nThis is a fork of [mongoose-auto-increment](https://github.com/chevex-archived/mongoose-auto-increment) which has not been maintained in a while. Also used fixes and changes from [dashride fork](https://github.com/Dashride/mongoose-auto-increment). This fork addresses the following issues:\n- fix error `'required' is not valid for an index specification` for Mongoose 4\n- does not require established connection for initialization **(deprecate `initialize()` method)**\n- include Flowtype and Typescript declarations\n- tested with Mongoose 5\n- setup automatic package publishing on PR merge with Travis CI and [sematic-release](https://github.com/semantic-release/semantic-release)\n\n## Getting Started\n\n> npm install mongoose-plugin-autoinc\n\nOnce you have the plugin installed it is very simple to use. Just pass `autoIncrement` to the `plugin()` function on your schema.\n\n> Note: You only need to initialize MAI once.\n\n````js\nimport mongoose from 'mongoose';\nimport { autoIncrement } from 'mongoose-plugin-autoinc';\n\nconst connection = mongoose.createConnection(\"mongodb://localhost/myDatabase\");\n\nconst BookSchema = new mongoose.Schema({\n    author: { type: Schema.Types.ObjectId, ref: 'Author' },\n    title: String,\n    genre: String,\n    publishDate: Date\n});\n\nBookSchema.plugin(autoIncrement, 'Book');\nconst Book = connection.model('Book', BookSchema);\n````\n\nThat's it. Now you can create book entities at will and they will have an `_id` field added of type `Number` and will automatically increment with each new document. Even declaring references is easy, just remember to change the reference property's type to `Number` instead of `ObjectId` if the referenced model is also using the plugin.\n\n````js\nconst AuthorSchema = new mongoose.Schema({\n    name: String\n});\n\nconst BookSchema = new mongoose.Schema({\n    author: { type: Number, ref: 'Author' },\n    title: String,\n    genre: String,\n    publishDate: Date\n});\n\nBookSchema.plugin(autoIncrement, 'Book');\nAuthorSchema.plugin(autoIncrement, 'Author');\n````\n\n### Want a field other than `_id`?\n\n````js\nBookSchema.plugin(autoIncrement, { model: 'Book', field: 'bookId' });\n````\n\n### Want that field to start at a different number than zero or increment by more than one?\n\n````js\nBookSchema.plugin(autoIncrement, {\n    model: 'Book',\n    field: 'bookId',\n    startAt: 100,\n    incrementBy: 100\n});\n````\n\nYour first book document would have a `bookId` equal to `100`. Your second book document would have a `bookId` equal to `200`, and so on.\n\n### Want to know the next number coming up?\n\n````js\nconst Book = connection.model('Book', BookSchema);\nBook.nextCount((err, count) => {\n\n    // count === 0 -> true\n\n    const book = new Book();\n    book.save(err1 => {\n\n        // book._id === 0 -> true\n\n        book.nextCount((err2, count) => {\n\n            // count === 1 -> true\n\n        });\n    });\n});\n````\n\nnextCount is both a static method on the model (`Book.nextCount(...)`) and an instance method on the document (`book.nextCount(...)`).\n\n### Want to reset counter back to the start value?\n\n````js\nBookSchema.plugin(autoIncrement, {\n    model: 'Book',\n    field: 'bookId',\n    startAt: 100\n});\n\nconst Book = connection.model('Book', BookSchema),\n    book = new Book();\n\nbook.save(err => {\n\n    // book._id === 100 -> true\n\n    book.nextCount((err1, count) => {\n\n        // count === 101 -> true\n\n        book.resetCount((err2, nextCount) => {\n\n            // nextCount === 100 -> true\n\n        });\n\n    });\n\n});\n````\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nodkz/mongoose-plugin-autoinc.git"
  },
  "scripts": {
    "build": "npm run build-cjs && npm run build-flow-sh && npm run build-ts-sh",
    "build-cjs": "rimraf lib && babel src --ignore __tests__,__mocks__ -d lib",
    "build-flow": "find ./src -name '*.js' -not -path '*/__*' | while read filepath; do cp $filepath `echo $filepath | sed 's/\\/src\\//\\/lib\\//g'`.flow; done",
    "build-flow-sh": "sh build-flow.sh",
    "build-ts": "find ./src -name '*.d.ts' -not -path '*/__*' | while read filepath; do cp $filepath `echo $filepath | sed 's/\\/src\\//\\/lib\\//g'`; done",
    "build-ts-sh": "sh build-ts.sh",
    "coverage": "jest --coverage --maxWorkers 2",
    "eslint": "eslint --ext .js ./src",
    "eslint:fix": "eslint --ext .js ./src --fix",
    "flow": "flow",
    "lint": "npm run eslint && npm run tslint && npm run tscheck",
    "semantic-release": "semantic-release",
    "test": "npm run coverage && npm run lint && npm run flow",
    "tscheck": "tsc",
    "tslint": "tslint -p . \"src/**/*.d.ts\"",
    "watch": "jest --watch"
  },
  "types": "lib/index.d.ts",
  "version": "1.1.9"
}
