{
  "_args": [
    [
      {
        "raw": "ts-node@^5.0.1",
        "scope": null,
        "escapedName": "ts-node",
        "name": "ts-node",
        "rawSpec": "^5.0.1",
        "spec": ">=5.0.1 <6.0.0",
        "type": "range"
      },
      "C:\\Users\\homer\\Desktop\\NodeJS\\rest_api_tesis"
    ]
  ],
  "_from": "ts-node@>=5.0.1 <6.0.0",
  "_id": "ts-node@5.0.1",
  "_inCache": true,
  "_location": "/ts-node",
  "_nodeVersion": "9.6.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ts-node_5.0.1_1519925343889_0.5352390696154257"
  },
  "_npmUser": {
    "name": "blakeembrey",
    "email": "hello@blakeembrey.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ts-node@^5.0.1",
    "scope": null,
    "escapedName": "ts-node",
    "name": "ts-node",
    "rawSpec": "^5.0.1",
    "spec": ">=5.0.1 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ts-node/-/ts-node-5.0.1.tgz",
  "_shasum": "78e5d1cb3f704de1b641e43b76be2d4094f06f81",
  "_shrinkwrap": null,
  "_spec": "ts-node@^5.0.1",
  "_where": "C:\\Users\\homer\\Desktop\\NodeJS\\rest_api_tesis",
  "author": {
    "name": "Blake Embrey",
    "email": "hello@blakeembrey.com",
    "url": "http://blakeembrey.me"
  },
  "bin": {
    "ts-node": "dist/bin.js"
  },
  "bugs": {
    "url": "https://github.com/TypeStrong/ts-node/issues"
  },
  "dependencies": {
    "arrify": "^1.0.0",
    "chalk": "^2.3.0",
    "diff": "^3.1.0",
    "make-error": "^1.1.1",
    "minimist": "^1.2.0",
    "mkdirp": "^0.5.1",
    "source-map-support": "^0.5.3",
    "yn": "^2.0.0"
  },
  "description": "TypeScript execution environment and REPL for node",
  "devDependencies": {
    "@types/arrify": "^1.0.1",
    "@types/chai": "^4.0.4",
    "@types/diff": "^3.2.1",
    "@types/minimist": "^1.2.0",
    "@types/mkdirp": "^0.5.0",
    "@types/mocha": "^2.2.42",
    "@types/node": "^9.4.6",
    "@types/proxyquire": "^1.3.28",
    "@types/react": "^16.0.2",
    "@types/semver": "^5.3.34",
    "@types/source-map-support": "^0.4.0",
    "@types/yn": "github:types/npm-yn#ca75f6c82940fae6a06fb41d2d37a6aa9b4ea8e9",
    "chai": "^4.0.1",
    "istanbul": "^0.4.0",
    "mocha": "^5.0.1",
    "ntypescript": "^1.201507091536.1",
    "proxyquire": "^1.7.2",
    "react": "^16.0.0",
    "rimraf": "^2.5.4",
    "semver": "^5.1.0",
    "tslint": "^5.0.0",
    "tslint-config-standard": "^7.0.0",
    "typescript": "^2.7.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-XK7QmDcNHVmZkVtkiwNDWiERRHPyU8nBqZB1+iv2UhOG0q3RQ9HsZ2CMqISlFbxjrYFGfG2mX7bW4dAyxBVzUw==",
    "shasum": "78e5d1cb3f704de1b641e43b76be2d4094f06f81",
    "tarball": "https://registry.npmjs.org/ts-node/-/ts-node-5.0.1.tgz",
    "fileCount": 14,
    "unpackedSize": 120524
  },
  "engines": {
    "node": ">=4.2.0"
  },
  "files": [
    "dist/",
    "register/",
    "LICENSE"
  ],
  "gitHead": "ab7dd0fe5db55967aaae3c3625695d11fd3e4400",
  "homepage": "https://github.com/TypeStrong/ts-node",
  "keywords": [
    "typescript",
    "node",
    "runtime",
    "environment",
    "ts",
    "compiler"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "blakeembrey",
      "email": "hello@blakeembrey.com"
    }
  ],
  "name": "ts-node",
  "optionalDependencies": {},
  "readme": "# TypeScript Node\n\n[![NPM version][npm-image]][npm-url]\n[![NPM downloads][downloads-image]][downloads-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n\n> TypeScript execution environment and REPL for node. **Works with `typescript@>=2.0`**.\n\n## Installation\n\n```sh\nnpm install -g ts-node\n\n# Install a TypeScript compiler (requires `typescript` by default).\nnpm install -g typescript\n```\n\n## Features\n\n* Execute TypeScript files with node\n* Interactive REPL\n* Execute (and print) TypeScript through the CLI\n* Source map support\n* Loads compiler options and `.d.ts` files from `tsconfig.json`\n\n## Usage\n\n```sh\n# Execute a script as you would normally with `node`.\nts-node script.ts\n\n# Starts the TypeScript REPL.\nts-node\n\n# Execute code with TypeScript.\nts-node -e 'console.log(\"Hello, world!\")'\n\n# Execute, and print, code with TypeScript.\nts-node -p '\"Hello, world!\"'\n\n# Pipe scripts to execute with TypeScript.\necho \"console.log('Hello, world!')\" | ts-node\n```\n\n![TypeScript REPL](https://github.com/TypeStrong/ts-node/raw/master/screenshot.png)\n\n### Programmatic\n\nYou can require `ts-node` and register the loader for future requires by using `require('ts-node').register({ /* options */ })`. You can also use the shortcuts `node -r ts-node/register` or `node -r ts-node/register/type-check` depending on your preferences.\n\n**Note:** If you need to use advanced node.js CLI arguments (e.g. `--inspect`), use them with `node -r ts-node/register` instead of the `ts-node` CLI.\n\n### Mocha\n\n```sh\nmocha --require ts-node/register --watch-extensions ts,tsx \"test/**/*.{ts,tsx}\" [...args]\n```\n\n**Note:** `--watch-extensions` is only used in `--watch` mode.\n\n### Tape\n\n```sh\nts-node node_modules/tape/bin/tape [...args]\n```\n\n### Gulp\n\n```sh\n# Create a `gulpfile.ts` and run `gulp`.\ngulp\n```\n\n## How It Works\n\n**TypeScript Node** works by registering the TypeScript compiler for the `.ts`, `.tsx` and, with `allowJs` enabled, `.js` extensions. When node.js has a file extension registered (the `require.extensions` object), it will use the extension internally for module resolution. When an extension is unknown to node.js, it will handle the file as `.js` (JavaScript).\n\n**P.S.** This means if you don't register an extension, it is compiled as JavaScript. When `ts-node` is used with `allowJs`, JavaScript files are transpiled using the TypeScript compiler.\n\n## Loading `tsconfig.json`\n\n**Typescript Node** loads `tsconfig.json` automatically. Use `--skip-project` to the loading `tsconfig.json`.\n\n**Tip**: You can use `ts-node` together with [tsconfig-paths](https://www.npmjs.com/package/tsconfig-paths) to load modules according to the `paths` section in `tsconfig.json`.\n\n## Configuration Options\n\nYou can set options by passing them before the script path, via programmatic usage or via environment variables.\n\n```sh\nts-node --compiler ntypescript --project src/tsconfig.json hello-world.ts\n```\n\n### CLI Options\n\nSupports `--print`, `--eval` and `--require` from [node.js CLI options](https://nodejs.org/api/cli.html).\n\n* `--help` Prints help text\n* `--version` Prints version information\n\n### CLI and Programmatic Options\n\n_Environment variable denoted in parentheses._\n\n* `--typeCheck` Enable type checking for TypeScript (`TS_NODE_TYPE_CHECK`)\n* `--cacheDirectory` Configure the output file cache directory (`TS_NODE_CACHE_DIRECTORY`)\n* `-I, --ignore [pattern]` Override the path patterns to skip compilation (`TS_NODE_IGNORE`)\n* `-P, --project [path]` Path to TypeScript JSON project file (`TS_NODE_PROJECT`)\n* `-C, --compiler [name]` Specify a custom TypeScript compiler (`TS_NODE_COMPILER`)\n* `-D, --ignoreDiagnostics [code]` Ignore TypeScript warnings by diagnostic code (`TS_NODE_IGNORE_DIAGNOSTICS`)\n* `-O, --compilerOptions [opts]` JSON object to merge with compiler options (`TS_NODE_COMPILER_OPTIONS`)\n* `--no-cache` Disable the local TypeScript Node cache (`TS_NODE_CACHE`)\n* `--skip-project` Skip project config resolution and loading (`TS_NODE_SKIP_PROJECT`)\n* `--skip-ignore` Skip ignore checks (`TS_NODE_SKIP_IGNORE`)\n\n### Programmatic Only Options\n\n* `transformers` An array of transformers to pass to TypeScript\n* `readFile` Custom TypeScript-compatible file reading function\n* `fileExists` Custom TypeScript-compatible file existence function\n\n## License\n\nMIT\n\n[npm-image]: https://img.shields.io/npm/v/ts-node.svg?style=flat\n[npm-url]: https://npmjs.org/package/ts-node\n[downloads-image]: https://img.shields.io/npm/dm/ts-node.svg?style=flat\n[downloads-url]: https://npmjs.org/package/ts-node\n[travis-image]: https://img.shields.io/travis/TypeStrong/ts-node.svg?style=flat\n[travis-url]: https://travis-ci.org/TypeStrong/ts-node\n[coveralls-image]: https://img.shields.io/coveralls/TypeStrong/ts-node.svg?style=flat\n[coveralls-url]: https://coveralls.io/r/TypeStrong/ts-node?branch=master\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/TypeStrong/ts-node.git"
  },
  "scripts": {
    "build": "npm run clean && npm run tsc",
    "clean": "rimraf dist",
    "lint": "tslint \"src/**/*.ts\" --project tsconfig.json",
    "prepublish": "npm run build",
    "test": "npm run build && npm run lint && npm run test-cov",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- \"dist/**/*.spec.js\" -R spec --bail",
    "test-spec": "mocha dist/**/*.spec.js -R spec --bail",
    "tsc": "tsc"
  },
  "types": "dist/index.d.ts",
  "version": "5.0.1"
}
